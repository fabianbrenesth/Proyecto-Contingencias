for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,70)
}
}
}
library(readxl)
#parametros para los mu de hombres
Mortalidad.H <- read_excel("Mortalidad.xlsx", sheet = 1)
Recuperacion.H <- read_excel("Recuperacion.xlsx", sheet = 1)
Transicion.H <- read_excel("Transicion.xlsx", sheet = 1)
#parametro para los mu de mujeres
Mortalidad.M <- read_excel("Mortalidad.xlsx", sheet = 2)
Recuperacion.M <- read_excel("Recuperacion.xlsx", sheet = 2)
Transicion.M <- read_excel("Transicion.xlsx", sheet = 2)
#vamos a guardar en listas los parametros para luego solo llamar la funcion
#recorremos desde la columna dos ya que la primera son los parametros y lo que queremos es recorrer las fuerzas de transicion
params.transicion.H <- lapply(2:ncol(Transicion.H), function(col) {
list(
A = Transicion.H[Transicion.H$Parametros == "A", col],
B = Transicion.H[Transicion.H$Parametros == "B", col],
c = Transicion.H[Transicion.H$Parametros == "c", col],
D = Transicion.H[Transicion.H$Parametros == "D", col],
K = Transicion.H[Transicion.H$Parametros == "K", col],
H = Transicion.H[Transicion.H$Parametros == "H", col],
alpha1 = Transicion.H[Transicion.H$Parametros == "a1", col],
alpha2 = Transicion.H[Transicion.H$Parametros == "a2", col],
alpha3 = Transicion.H[Transicion.H$Parametros == "a3", col],
alpha4 = Transicion.H[Transicion.H$Parametros == "a4", col],
alpha5 = Transicion.H[Transicion.H$Parametros == "a5", col],
alpha6 = Transicion.H[Transicion.H$Parametros == "a6", col]
)
#alpha = Transicion.H[Transicion.H$Parametros %in% c("a1", "a2", "a3", "a4", "a5", "a6"), col]
})
names(params.transicion.H) <- names(Transicion.H)[-1]
params.recuperacion.H <- lapply(2:ncol(Recuperacion.H), function(col) {
list(
beta1 = Recuperacion.H[Recuperacion.H$Parametros == "B1", col],
beta2 = Recuperacion.H[Recuperacion.H$Parametros == "B2", col],
beta3 = Recuperacion.H[Recuperacion.H$Parametros == "B3", col]
)
})
names(params.recuperacion.H) <- names(Recuperacion.H)[-1]
params.mortalidad.H <- lapply(2:ncol(Mortalidad.H), function(col) {
list(
gamma1 = Mortalidad.H[Mortalidad.H$Parametros == "y1", col],
gamma2 = Mortalidad.H[Mortalidad.H$Parametros == "y2", col],
gamma3 = Mortalidad.H[Mortalidad.H$Parametros == "y3", col],
gamma4 = Mortalidad.H[Mortalidad.H$Parametros == "y4", col]
)
})
names(params.mortalidad.H) <- names(Mortalidad.H)[-1]
params.transicion.M <- lapply(2:ncol(Transicion.M), function(col) {
list(
A = Transicion.M[Transicion.M$Parametros == "A", col],
B = Transicion.M[Transicion.M$Parametros == "B", col],
c = Transicion.M[Transicion.M$Parametros == "c", col],
D = Transicion.M[Transicion.M$Parametros == "D", col],
K = Transicion.M[Transicion.M$Parametros == "K", col],
H = Transicion.M[Transicion.M$Parametros == "H", col],
alpha1 = Transicion.M[Transicion.M$Parametros == "a1", col],
alpha2 = Transicion.M[Transicion.M$Parametros == "a2", col],
alpha3 = Transicion.M[Transicion.M$Parametros == "a3", col],
alpha4 = Transicion.M[Transicion.M$Parametros == "a4", col],
alpha5 = Transicion.M[Transicion.M$Parametros == "a5", col],
alpha6 = Transicion.M[Transicion.M$Parametros == "a6", col]
)
})
names(params.transicion.M) <- names(Transicion.M)[-1]
params.recuperacion.M <- lapply(2:ncol(Recuperacion.M), function(col) {
list(
beta1 = Recuperacion.M[Recuperacion.M$Parametros == "B1", col],
beta2 = Recuperacion.M[Recuperacion.M$Parametros == "B2", col],
beta3 = Recuperacion.M[Recuperacion.M$Parametros == "B3", col]
)
})
names(params.recuperacion.M) <- names(Recuperacion.M)[-1]
params.mortalidad.M <- lapply(2:ncol(Mortalidad.M), function(col) {
list(
gamma1 = Mortalidad.M[Mortalidad.M$Parametros == "y1", col],
gamma2 = Mortalidad.M[Mortalidad.M$Parametros == "y2", col],
gamma3 = Mortalidad.M[Mortalidad.M$Parametros == "y3", col],
gamma4 = Mortalidad.M[Mortalidad.M$Parametros == "y4", col]
)
})
names(params.mortalidad.M) <- names(Mortalidad.M)[-1]
U.H <- function(i, j, x) {
nombre.col <- paste0("u", i, j)
if (j == 6) {
params <- params.mortalidad.H[[nombre.col]]
mu <- params$gamma1+ params$gamma2 *x + exp(params$gamma3 + params$gamma4 * x)
} else if (j < i) {
if (abs(i - j) >= 2) {
mu <- 0
} else {
params <- params.recuperacion.H[[nombre.col]]
mu <- (params$beta1 + exp(params$beta2+ params$beta3*x)) /
(1 + params$beta1+ exp(params$beta2 +params$beta3* x))
}
} else if (i < j) {
params <- params.transicion.H[[nombre.col]]
if (x <= 65) {
mu <- (params$A + params$B*(params$c^x)) / (1 + params$D * (params$c^x) + params$K * (params$c^-x)) + params$H
} else {
mu <- params$alpha1 * (x - 65)^5 +params$alpha2* (x - 65)^4 + params$alpha3 * (x - 65)^3 +
params$alpha4 * (x - 65)^2+ params$alpha5 * (x - 65)+ params$alpha6
}
}
if (is.data.frame(mu)) {
return(as.numeric(mu[[1]]))
}
return(mu)
}
U.M <- function(i, j, x) {
nombre.col <- paste0("u", i, j)
if (j == 6) {
params <- params.mortalidad.M[[nombre.col]]
mu <- params$gamma1 + params$gamma2 * x + exp(params$gamma3 + params$gamma4 * x)
} else if (j < i) {
if (abs(i - j) >= 2 || i == 6) {
mu <- 0
} else {
params <- params.recuperacion.M[[nombre.col]]
mu <- (params$beta1 + exp(params$beta2+ params$beta3*x)) /
(1 + params$beta1+ exp(params$beta2 +params$beta3* x))
}
} else if (i < j) {
params <- params.transicion.M[[nombre.col]]
if (x <= 65) {
mu <- (params$A + params$B*(params$c^x)) / (1 + params$D * (params$c^x) + params$K * (params$c^-x)) + params$H
} else {
mu <- params$alpha1 * (x - 65)^5 +params$alpha2* (x - 65)^4 + params$alpha3 * (x - 65)^3 +
params$alpha4 * (x - 65)^2+ params$alpha5 * (x - 65)+ params$alpha6
}
}
if (is.data.frame(mu)) {
return(as.numeric(mu[[1]]))
}
return(mu)
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,70)
}
}
}
View(matriz)
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,70)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,66)
}
}
}
U.H(2,3,70)
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,65)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,64)
}
}
}
U.H <- function(i, j, x) {
nombre.col <- paste0("u", i, j)
if (j == 6) {
params <- params.mortalidad.H[[nombre.col]]
mu <- params$gamma1+ params$gamma2 *x + exp(params$gamma3 + params$gamma4 * x)
} else if (j < i) {
if (abs(i - j) >= 2 || i == 6) {
mu <- 0
} else {
params <- params.recuperacion.H[[nombre.col]]
mu <- (params$beta1 + exp(params$beta2+ params$beta3*x)) /
(1 + params$beta1+ exp(params$beta2 +params$beta3* x))
}
} else if (i < j) {
params <- params.transicion.H[[nombre.col]]
if (x <= 65) {
mu <- (params$A + params$B*(params$c^x)) / (1 + params$D * (params$c^x) + params$K * (params$c^-x)) + params$H
} else {
mu <- params$alpha1 * (x - 65)^5 +params$alpha2* (x - 65)^4 + params$alpha3 * (x - 65)^3 +
params$alpha4 * (x - 65)^2+ params$alpha5 * (x - 65)+ params$alpha6
}
}
if (is.data.frame(mu)) {
return(as.numeric(mu[[1]]))
}
return(mu)
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,67)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,75)
}
}
}
View(matriz)
View(Mortalidad.H)
u(1,6,20)
U.H(1,6,20)
U.H(3,6,20)
U.H(3,6,70)
U.H(1,6,70)
U.H(1,6,65)
U.H(3,6,65)
Transicion.H$Parametros == "Blend Point"
blend_point <- as.numeric(Transicion.H[Transicion.H$Parametros == "Blend Point",1])
(Transicion.H[Transicion.H$Parametros])
i <- 1
j <- 2
# Crear el nombre de la columna con paste0
nombre.col <- paste0("u", i, j)
# Extraer el valor de Blend Point
blend_point <- as.numeric(Transicion.H[Transicion.H$Parametros == "Blend Point", nombre.col])
# Ver el resultado
print(blend_point)
i <- 1
j <- 2
# Crear el nombre de la columna con paste0
nombre.col <- paste0("u", i, j)
# Extraer el valor de Blend Point
blend_point <- Transicion.H[Transicion.H$Parametros == "Blend Point", nombre.col]
# Ver el resultado
print(blend_point)
library(readxl)
#parametros para los mu de hombres
Mortalidad.H <- read_excel("Mortalidad.xlsx", sheet = 1)
Recuperacion.H <- read_excel("Recuperacion.xlsx", sheet = 1)
Transicion.H <- read_excel("Transicion.xlsx", sheet = 1)
#parametro para los mu de mujeres
Mortalidad.M <- read_excel("Mortalidad.xlsx", sheet = 2)
Recuperacion.M <- read_excel("Recuperacion.xlsx", sheet = 2)
Transicion.M <- read_excel("Transicion.xlsx", sheet = 2)
#vamos a guardar en listas los parametros para luego solo llamar la funcion
#recorremos desde la columna dos ya que la primera son los parametros y lo que queremos es recorrer las fuerzas de transicion
params.transicion.H <- lapply(2:ncol(Transicion.H), function(col) {
list(
A = Transicion.H[Transicion.H$Parametros == "A", col],
B = Transicion.H[Transicion.H$Parametros == "B", col],
c = Transicion.H[Transicion.H$Parametros == "c", col],
D = Transicion.H[Transicion.H$Parametros == "D", col],
K = Transicion.H[Transicion.H$Parametros == "K", col],
H = Transicion.H[Transicion.H$Parametros == "H", col],
alpha1 = Transicion.H[Transicion.H$Parametros == "a1", col],
alpha2 = Transicion.H[Transicion.H$Parametros == "a2", col],
alpha3 = Transicion.H[Transicion.H$Parametros == "a3", col],
alpha4 = Transicion.H[Transicion.H$Parametros == "a4", col],
alpha5 = Transicion.H[Transicion.H$Parametros == "a5", col],
alpha6 = Transicion.H[Transicion.H$Parametros == "a6", col]
)
#alpha = Transicion.H[Transicion.H$Parametros %in% c("a1", "a2", "a3", "a4", "a5", "a6"), col]
})
names(params.transicion.H) <- names(Transicion.H)[-1]
params.recuperacion.H <- lapply(2:ncol(Recuperacion.H), function(col) {
list(
beta1 = Recuperacion.H[Recuperacion.H$Parametros == "B1", col],
beta2 = Recuperacion.H[Recuperacion.H$Parametros == "B2", col],
beta3 = Recuperacion.H[Recuperacion.H$Parametros == "B3", col]
)
})
names(params.recuperacion.H) <- names(Recuperacion.H)[-1]
params.mortalidad.H <- lapply(2:ncol(Mortalidad.H), function(col) {
list(
gamma1 = Mortalidad.H[Mortalidad.H$Parametros == "y1", col],
gamma2 = Mortalidad.H[Mortalidad.H$Parametros == "y2", col],
gamma3 = Mortalidad.H[Mortalidad.H$Parametros == "y3", col],
gamma4 = Mortalidad.H[Mortalidad.H$Parametros == "y4", col]
)
})
names(params.mortalidad.H) <- names(Mortalidad.H)[-1]
params.transicion.M <- lapply(2:ncol(Transicion.M), function(col) {
list(
A = Transicion.M[Transicion.M$Parametros == "A", col],
B = Transicion.M[Transicion.M$Parametros == "B", col],
c = Transicion.M[Transicion.M$Parametros == "c", col],
D = Transicion.M[Transicion.M$Parametros == "D", col],
K = Transicion.M[Transicion.M$Parametros == "K", col],
H = Transicion.M[Transicion.M$Parametros == "H", col],
alpha1 = Transicion.M[Transicion.M$Parametros == "a1", col],
alpha2 = Transicion.M[Transicion.M$Parametros == "a2", col],
alpha3 = Transicion.M[Transicion.M$Parametros == "a3", col],
alpha4 = Transicion.M[Transicion.M$Parametros == "a4", col],
alpha5 = Transicion.M[Transicion.M$Parametros == "a5", col],
alpha6 = Transicion.M[Transicion.M$Parametros == "a6", col]
)
})
names(params.transicion.M) <- names(Transicion.M)[-1]
params.recuperacion.M <- lapply(2:ncol(Recuperacion.M), function(col) {
list(
beta1 = Recuperacion.M[Recuperacion.M$Parametros == "B1", col],
beta2 = Recuperacion.M[Recuperacion.M$Parametros == "B2", col],
beta3 = Recuperacion.M[Recuperacion.M$Parametros == "B3", col]
)
})
names(params.recuperacion.M) <- names(Recuperacion.M)[-1]
params.mortalidad.M <- lapply(2:ncol(Mortalidad.M), function(col) {
list(
gamma1 = Mortalidad.M[Mortalidad.M$Parametros == "y1", col],
gamma2 = Mortalidad.M[Mortalidad.M$Parametros == "y2", col],
gamma3 = Mortalidad.M[Mortalidad.M$Parametros == "y3", col],
gamma4 = Mortalidad.M[Mortalidad.M$Parametros == "y4", col]
)
})
names(params.mortalidad.M) <- names(Mortalidad.M)[-1]
U.H <- function(i, j, x) {
nombre.col <- paste0("u", i, j)
if (j == 6) {
params <- params.mortalidad.H[[nombre.col]]
mu <- params$gamma1+ params$gamma2 *x + exp(params$gamma3 + params$gamma4 * x)
} else if (j < i) {
if (abs(i - j) >= 2 || i == 6) {
mu <- 0
} else {
params <- params.recuperacion.H[[nombre.col]]
mu <- (params$beta1 + exp(params$beta2+ params$beta3*x)) /
(1 + params$beta1+ exp(params$beta2 +params$beta3* x))
}
} else if (i < j) {
params <- params.transicion.H[[nombre.col]]
blend_point <- as.numeric(Transicion.H[Transicion.H$Parametros == "Blend Point", nombre.col])
if (x <= blend_point) {
mu <- (params$A + params$B*(params$c^x)) / (1 + params$D * (params$c^x) + params$K * (params$c^-x)) + params$H
} else {
mu <- params$alpha1 * (x - blend_point)^5 +params$alpha2* (x - blend_point)^4 + params$alpha3 * (x - blend_point)^3 +
params$alpha4 * (x - blend_point)^2+ params$alpha5 * (x - blend_point)+ params$alpha6
}
}
if (is.data.frame(mu)) {
return(as.numeric(mu[[1]]))
}
return(mu)
}
U.M <- function(i, j, x) {
nombre.col <- paste0("u", i, j)
if (j == 6) {
params <- params.mortalidad.M[[nombre.col]]
mu <- params$gamma1 + params$gamma2 * x + exp(params$gamma3 + params$gamma4 * x)
} else if (j < i) {
if (abs(i - j) >= 2 || i == 6) {
mu <- 0
} else {
params <- params.recuperacion.M[[nombre.col]]
mu <- (params$beta1 + exp(params$beta2+ params$beta3*x)) /
(1 + params$beta1+ exp(params$beta2 +params$beta3* x))
}
} else if (i < j) {
params <- params.transicion.M[[nombre.col]]
blend_point <- as.numeric(Transicion.M[Transicion.M$Parametros == "Blend Point", nombre.col])
if (x <= blend_point) {
mu <- (params$A + params$B*(params$c^x)) / (1 + params$D * (params$c^x) + params$K * (params$c^-x)) + params$H
} else {
mu <- params$alpha1 * (x - blend_point)^5 +params$alpha2* (x - blend_point)^4 + params$alpha3 * (x - blend_point)^3 +
params$alpha4 * (x - blend_point)^2+ params$alpha5 * (x - blend_point)+ params$alpha6
}
}
if (is.data.frame(mu)) {
return(as.numeric(mu[[1]]))
}
return(mu)
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,75)
}
}
}
View(matriz)
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,70)
}
}
}
View(matriz)
U.M(3,5,70)
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,80)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,90)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,80)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,99)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,98)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,60)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,65)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.M(i,j,66)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,66)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,70)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,80)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,90)
}
}
}
matriz <- matrix(, nrow = 6, ncol = 6)
for (i in 1:6){
for (j in 1:6){
if (i != j){
matriz[i,j] <- U.H(i,j,99)
}
}
}
